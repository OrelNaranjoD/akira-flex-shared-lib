name: Publish

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: false

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint and fix code
        run: npm run lint:fix

      - name: Format code
        run: npm run format

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

  bump-version:
    needs: validate-and-build
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Apply formatting and linting fixes
        run: |
          npm run lint:fix
          npm run format

      - name: Generate changelog
        run: |
          npm run changelog

      - name: Bump version and commit all changes
        id: bump
        uses: phips28/gh-action-bump-version@v11.0.7
        with:
          patch-wording: 'chore,docs,style,refactor,test,fix'
          minor-wording: 'feat'
          major-wording: 'BREAKING CHANGE,breaking,!'
          tag-prefix: 'v'
          default: ${{ github.event.inputs.release_type || 'patch' }}
          commit-message: |
            ðŸš€ Release {{version}} [skip ci]

            - docs(changelog): update CHANGELOG.md for {{version}}
            - style: auto-fix linting and formatting issues
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output new version
        id: output-version
        run: echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    outputs:
      new_version: ${{ steps.output-version.outputs.new_version }}

  publish-npm:
    needs: bump-version
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@orelnaranjod'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish package to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.FLEX_LIB_TOKEN }}

  create-release:
    needs: [bump-version, publish-npm]
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create release branch
        run: |
          git checkout -b release/v${{ needs.bump-version.outputs.new_version }}
          git push origin release/v${{ needs.bump-version.outputs.new_version }}

      - name: Open Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require('@actions/github');
            const newVersion = context.payload.inputs.new_version;
            const response = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${newVersion}`,
              head: `release/v${newVersion}`,
              base: 'main',
              body: `This PR merges the release branch for version ${newVersion} into main.`
            });
            console.log(`Pull Request created: ${response.data.html_url}`);

      - name: Approve Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require('@actions/github');
            const prNumber = context.payload.inputs.pull_request_number;
            await github.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              event: 'APPROVE',
              body: 'Automatically approved by workflow.'
            });
